{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\src\\\\StockTable\\\\index.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport { Header, Table, Container } from 'semantic-ui-react';\n\nvar StockTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StockTable, _Component);\n\n  function StockTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StockTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StockTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderTable = function () {\n      var companies = [{\n        CompanyName: \"Bloomberg\",\n        CompanyCode: \"BLG\",\n        SemanticScore: 1.25\n      }, {\n        CompanyName: \"Apple\",\n        CompanyCode: \"APPL\",\n        SemanticScore: -2\n      }, {\n        CompanyName: \"Google\",\n        CompanyCode: \"GOOGL\",\n        SemanticScore: -1.7\n      }, {\n        CompanyName: \"Epic\",\n        CompanyCode: \"EPIC\",\n        SemanticScore: -1.25\n      }];\n      return React.createElement(\"div\", {\n        class: \"stock-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Table, {\n        basic: \"very\",\n        celled: true,\n        collapsing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Companies\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Sentiments\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, companies.map(function (el, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Header, {\n          as: \"h4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Header.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, el.CompanyName, React.createElement(Header.Subheader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Human Resources\")))), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Header.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, el.SemanticScore))));\n      })))));\n    };\n\n    return _this;\n  }\n\n  _createClass(StockTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.renderTable());\n    }\n  }]);\n\n  return StockTable;\n}(Component);\n\nexport default StockTable;","map":{"version":3,"sources":["C:\\Users\\Jshen96\\Desktop\\Repos\\market-sentiment-analysis\\app\\src\\StockTable\\index.js"],"names":["React","Component","Header","Table","Container","StockTable","renderTable","companies","CompanyName","CompanyCode","SemanticScore","map","el","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kCAAP;AACA,OAAO,aAAP;AAGA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,QAAyC,mBAAzC;;IACMC,U;;;;;;;;;;;;;;;;;;UAEJC,W,GAAc,YAAM;AAClB,UAAIC,SAAS,GAAG,CACZ;AACIC,QAAAA,WAAW,EAAG,WADlB;AAEIC,QAAAA,WAAW,EAAG,KAFlB;AAGIC,QAAAA,aAAa,EAAG;AAHpB,OADY,EAMZ;AACIF,QAAAA,WAAW,EAAG,OADlB;AAEIC,QAAAA,WAAW,EAAG,MAFlB;AAGIC,QAAAA,aAAa,EAAG,CAAC;AAHrB,OANY,EAWZ;AACIF,QAAAA,WAAW,EAAG,QADlB;AAEIC,QAAAA,WAAW,EAAG,OAFlB;AAGIC,QAAAA,aAAa,EAAG,CAAC;AAHrB,OAXY,EAgBZ;AACIF,QAAAA,WAAW,EAAG,MADlB;AAEIC,QAAAA,WAAW,EAAG,MAFlB;AAGIC,QAAAA,aAAa,EAAG,CAAC;AAHrB,OAhBY,CAAhB;AAsBA,aACI;AAAK,QAAA,KAAK,EAAG,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,MAAM,MAA1B;AAA2B,QAAA,UAAU,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,CADJ,EAOI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,SAAS,CAACI,GAAV,CAAc,UAACC,EAAD,EAAKC,KAAL;AAAA,eACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCD,EAAE,CAACJ,WADJ,EAEA,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFA,CAFJ,CADA,CADJ,EAUI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCI,EAAE,CAACF,aADJ,CADJ,CAVJ,CADJ,CADW;AAAA,OAAd,CADL,CAPJ,CADJ,CADJ,CADJ;AAqCD,K;;;;;;;6BACQ;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,WAAL,EADL,CADJ;AAKD;;;;EArEsBL,S;;AAwEzB,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\n\r\n\r\nimport { Header, Table, Container } from 'semantic-ui-react'\r\nclass StockTable extends Component {\r\n\r\n  renderTable = () => {\r\n    let companies = [\r\n        { \r\n            CompanyName : \"Bloomberg\",\r\n            CompanyCode : \"BLG\",\r\n            SemanticScore : 1.25\r\n        },\r\n        { \r\n            CompanyName : \"Apple\",\r\n            CompanyCode : \"APPL\",\r\n            SemanticScore : -2\r\n        },\r\n        { \r\n            CompanyName : \"Google\",\r\n            CompanyCode : \"GOOGL\",\r\n            SemanticScore : -1.7\r\n        },\r\n        { \r\n            CompanyName : \"Epic\",\r\n            CompanyCode : \"EPIC\",\r\n            SemanticScore : -1.25\r\n        }\r\n    ]\r\n    return (\r\n        <div class = \"stock-table\">\r\n            <Container>\r\n                <Table basic='very' celled collapsing>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Companies</Table.HeaderCell>\r\n                            <Table.HeaderCell>Sentiments</Table.HeaderCell>\r\n                        </Table.Row>    \r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {companies.map((el, index) => (\r\n                            <div>\r\n                                <Table.Row>\r\n                                    <Table.Cell>\r\n                                    <Header as='h4' >\r\n                                        {/* <Image src = '../logo.svg' rounded size='mini' /> */}\r\n                                        <Header.Content>\r\n                                        {el.CompanyName}\r\n                                        <Header.Subheader>Human Resources</Header.Subheader>\r\n                                        </Header.Content>\r\n                                    </Header>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>\r\n                                        <Header.Content>\r\n                                        {el.SemanticScore}\r\n                                        </Header.Content>\r\n                                        \r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </div>\r\n                        ))}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    )\r\n  }\r\n  render() {\r\n    return (   \r\n        <div>\r\n            {this.renderTable()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockTable;\r\n"]},"metadata":{},"sourceType":"module"}