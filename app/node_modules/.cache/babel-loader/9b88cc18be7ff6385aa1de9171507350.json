{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jshen96\\\\Desktop\\\\Repos\\\\market-sentiment-analysis\\\\app\\\\src\\\\Chart\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      data: {\n        labels: [\"one\", \"two\", \"three\"],\n        // array of strings\n        datasets: [{\n          label: \"Company Name\",\n          // name of label\n          borderColor: '',\n          backgroundColor: 'rgba(0,0,0,0.0)',\n          data: [10, 20, 30] // array of strings\n\n        }, {}] // array of dicts\n\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.data,\n        options: {\n          maintainAspectRatio: false\n        },\n        width: 500,\n        height: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["C:\\Users\\Jshen96\\Desktop\\Repos\\market-sentiment-analysis\\app\\src\\Chart\\index.js"],"names":["React","Component","Line","Chart","props","state","data","labels","datasets","label","borderColor","backgroundColor","maintainAspectRatio"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;IACMC,K;;;;;AACF,iBAAYC,KAAZ,EAAoB;AAAA;;AAAA;;AAChB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AACHC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CADL;AAC8B;AACjCC,QAAAA,QAAQ,EAAE,CACV;AACIC,UAAAA,KAAK,EAAG,cADZ;AAC4B;AACxBC,UAAAA,WAAW,EAAG,EAFlB;AAGIC,UAAAA,eAAe,EAAG,iBAHtB;AAIIL,UAAAA,IAAI,EAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAJX,CAIuB;;AAJvB,SADU,EAOV,EAPU,CAFP,CAWC;;AAXD;AADE,KAAb;AAFgB;AAiBnB;;;;6BAGS;AACN,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,IAAD;AACI,QAAA,IAAI,EAAI,KAAKD,KAAL,CAAWC,IADvB;AAEI,QAAA,OAAO,EAAI;AAACM,UAAAA,mBAAmB,EAAG;AAAvB,SAFf;AAGI,QAAA,KAAK,EAAI,GAHb;AAII,QAAA,MAAM,EAAI,GAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CAAR;AASD;;;;EA/BaX,S;;AAmCpB,eAAeE,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2'\r\nclass Chart extends Component {\r\n    constructor(props)  {\r\n        super(props);\r\n        this.state = {\r\n            data : {\r\n                labels: [\"one\", \"two\", \"three\"], // array of strings\r\n                datasets: [\r\n                {\r\n                    label : \"Company Name\", // name of label\r\n                    borderColor : '',\r\n                    backgroundColor : 'rgba(0,0,0,0.0)',\r\n                    data : [10,20,30], // array of strings\r\n                },\r\n                {\r\n\r\n                }], // array of dicts\r\n            }\r\n        }\r\n    }\r\n\r\n            \r\n      render(){\r\n        return (<div>\r\n        <Line \r\n            data = {this.state.data}\r\n            options = {{maintainAspectRatio : false}}\r\n            width = {500}\r\n            height = {500}\r\n        />\r\n\r\n        </div>);\r\n      }\r\n      \r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}